
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <!--
This HTML was auto-generated from MATLAB code.
To make changes, update the MATLAB code and republish this document.
      --><title>predictive_variance_example</title><meta name="generator" content="MATLAB 7.12"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2011-11-01"><meta name="DC.source" content="predictive_variance_example.m"><style type="text/css">

body {
  background-color: white;
  margin:10px;
}

h1 {
  color: #990000; 
  font-size: x-large;
}

h2 {
  color: #990000;
  font-size: medium;
}

/* Make the text shrink to fit narrow windows, but not stretch too far in 
wide windows. */ 
p,h1,h2,div.content div {
  max-width: 600px;
  /* Hack for IE6 */
  width: auto !important; width: 600px;
}

pre.codeinput {
  background: #EEEEEE;
  padding: 10px;
}
@media print {
  pre.codeinput {word-wrap:break-word; width:100%;}
} 

span.keyword {color: #0000FF}
span.comment {color: #228B22}
span.string {color: #A020F0}
span.untermstring {color: #B20000}
span.syscmd {color: #B28C00}

pre.codeoutput {
  color: #666666;
  padding: 10px;
}

pre.error {
  color: red;
}

p.footer {
  text-align: right;
  font-size: xx-small;
  font-weight: lighter;
  font-style: italic;
  color: gray;
}

  </style></head><body><div class="content"><h2>Contents</h2><div><ul><li><a href="#1">predictive_variance_example.m</a></li><li><a href="#2">Sample data from the true function</a></li><li><a href="#3">Plot the data</a></li><li><a href="#4">Fit models of various orders</a></li><li><a href="#7">Plot sampled functions</a></li><li><a href="#9">Sample functions by sampling realisations of w from a Gaussian with</a></li></ul></div><h2>predictive_variance_example.m<a name="1"></a></h2><p>From A First Course in Machine Learning, Chapter 2. Simon Rogers, 01/11/11 [simon.rogers@glasgow.ac.uk] Predictive variance example</p><pre class="codeinput">clear <span class="string">all</span>;close <span class="string">all</span>;
</pre><h2>Sample data from the true function<a name="2"></a></h2><p><img src="predictive_variance_example_eq21422.png" alt="$y = 5x^3-x^2+x$"></p><pre class="codeinput">N = 100; <span class="comment">% Number of training points</span>
x = sort(10*rand(N,1)-5);
t = 5*x.^3 - x.^2 + x;
noise_var = 300;
t = t + randn(size(x)).*sqrt(noise_var);

<span class="comment">% Chop out some x data</span>
pos = find(x&gt;0 &amp; x&lt;2);
x(pos) = [];
t(pos) = [];

testx = [-5:0.1:5]';
</pre><h2>Plot the data<a name="3"></a></h2><pre class="codeinput">figure(1);
hold <span class="string">off</span>
plot(x,t,<span class="string">'k.'</span>,<span class="string">'markersize'</span>,10);
xlabel(<span class="string">'x'</span>);
ylabel(<span class="string">'t'</span>);
</pre><img vspace="5" hspace="5" src="predictive_variance_example_01.png" alt=""> <h2>Fit models of various orders<a name="4"></a></h2><pre class="codeinput">orders = [1:8];
<span class="keyword">for</span> i = 1:length(orders)
</pre><pre class="codeinput">    X = [];
    testX = [];
    <span class="keyword">for</span> k = 0:orders(i)
        X = [X x.^k];
        testX = [testX testx.^k];
    <span class="keyword">end</span>
    w = inv(X'*X)*X'*t;
    ss = (1/N)*(t'*t - t'*X*w);
    testmean = testX*w;
    testvar = ss * diag(testX*inv(X'*X)*testX');
    <span class="comment">% Plot the data and predictions</span>
    figure(1);
    hold <span class="string">off</span>
    plot(x,t,<span class="string">'k.'</span>,<span class="string">'markersize'</span>,10);
    xlabel(<span class="string">'x'</span>);
    ylabel(<span class="string">'t'</span>);
    hold <span class="string">on</span>
    errorbar(testx,testmean,testvar,<span class="string">'r'</span>)
    ti = sprintf(<span class="string">'Order %g'</span>,orders(i));
    title(ti);
</pre><img vspace="5" hspace="5" src="predictive_variance_example_02.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_03.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_04.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_05.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_06.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_07.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_08.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_09.png" alt=""> <pre class="codeinput"><span class="keyword">end</span>
</pre><h2>Plot sampled functions<a name="7"></a></h2><pre class="codeinput">orders = [1:8];
path(path,<span class="string">'../utilities'</span>);
<span class="keyword">for</span> i = 1:length(orders)
</pre><pre class="codeinput">    X = [];
    testX = [];
    <span class="keyword">for</span> k = 0:orders(i)
        X = [X x.^k];
        testX = [testX testx.^k];
    <span class="keyword">end</span>
    w = inv(X'*X)*X'*t;
    ss = (1/N)*(t'*t - t'*X*w);
</pre><h2>Sample functions by sampling realisations of w from a Gaussian with<a name="9"></a></h2><p><img src="predictive_variance_example_eq11625.png" alt="$\mu = \hat{\mathbf{w}},~~\Sigma = \sigma^2(\mathbf{X}^T\mathbf{X})^{-1}$"></p><pre class="codeinput">    covw = ss*inv(X'*X);
    wsamp = gausssamp(w,covw,10);
    testmean = testX*wsamp';
    <span class="comment">% Plot the data and functions</span>
    figure(1);
    hold <span class="string">off</span>
    plot(x,t,<span class="string">'k.'</span>,<span class="string">'markersize'</span>,10);
    xlabel(<span class="string">'x'</span>);
    ylabel(<span class="string">'t'</span>);
    hold <span class="string">on</span>
    plot(testx,testmean,<span class="string">'k'</span>,<span class="string">'color'</span>,[0.6 0.6 0.6])
    xlim([-1 3])
    ti = sprintf(<span class="string">'Order %g'</span>,orders(i));
    title(ti);
</pre><img vspace="5" hspace="5" src="predictive_variance_example_10.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_11.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_12.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_13.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_14.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_15.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_16.png" alt=""> <img vspace="5" hspace="5" src="predictive_variance_example_17.png" alt=""> <pre class="codeinput"><span class="keyword">end</span>
</pre><p class="footer"><br>
      Published with MATLAB&reg; 7.12<br></p></div><!--
##### SOURCE BEGIN #####
%% predictive_variance_example.m
% From A First Course in Machine Learning, Chapter 2.
% Simon Rogers, 01/11/11 [simon.rogers@glasgow.ac.uk]
% Predictive variance example
clear all;close all;
%% Sample data from the true function
% $y = 5x^3-x^2+x$
N = 100; % Number of training points
x = sort(10*rand(N,1)-5);
t = 5*x.^3 - x.^2 + x;
noise_var = 300;
t = t + randn(size(x)).*sqrt(noise_var);

% Chop out some x data
pos = find(x>0 & x<2);
x(pos) = [];
t(pos) = [];

testx = [-5:0.1:5]';

%% Plot the data
figure(1);
hold off
plot(x,t,'k.','markersize',10);
xlabel('x');
ylabel('t');

%% Fit models of various orders
orders = [1:8];
for i = 1:length(orders)
    %%
    X = [];
    testX = [];
    for k = 0:orders(i)
        X = [X x.^k];
        testX = [testX testx.^k];
    end
    w = inv(X'*X)*X'*t;
    ss = (1/N)*(t'*t - t'*X*w);
    testmean = testX*w;
    testvar = ss * diag(testX*inv(X'*X)*testX');
    % Plot the data and predictions
    figure(1);
    hold off
    plot(x,t,'k.','markersize',10);
    xlabel('x');
    ylabel('t');
    hold on
    errorbar(testx,testmean,testvar,'r')
    ti = sprintf('Order %g',orders(i));
    title(ti);
end


%% Plot sampled functions
orders = [1:8];
path(path,'../utilities');
for i = 1:length(orders)
    %%
    X = [];
    testX = [];
    for k = 0:orders(i)
        X = [X x.^k];
        testX = [testX testx.^k];
    end
    w = inv(X'*X)*X'*t;
    ss = (1/N)*(t'*t - t'*X*w);
    %% Sample functions by sampling realisations of w from a Gaussian with
    % $\mu = \hat{\mathbf{w}},~~\Sigma =
    % \sigma^2(\mathbf{X}^T\mathbf{X})^{-1}$
    covw = ss*inv(X'*X);
    wsamp = gausssamp(w,covw,10);
    testmean = testX*wsamp';
    % Plot the data and functions
    figure(1);
    hold off
    plot(x,t,'k.','markersize',10);
    xlabel('x');
    ylabel('t');
    hold on
    plot(testx,testmean,'k','color',[0.6 0.6 0.6])
    xlim([-1 3])
    ti = sprintf('Order %g',orders(i));
    title(ti);
end
##### SOURCE END #####
--></body></html>