
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <!--
This HTML was auto-generated from MATLAB code.
To make changes, update the MATLAB code and republish this document.
      --><title>olymppoly</title><meta name="generator" content="MATLAB 7.12"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2011-10-31"><meta name="DC.source" content="olymppoly.m"><style type="text/css">

body {
  background-color: white;
  margin:10px;
}

h1 {
  color: #990000; 
  font-size: x-large;
}

h2 {
  color: #990000;
  font-size: medium;
}

/* Make the text shrink to fit narrow windows, but not stretch too far in 
wide windows. */ 
p,h1,h2,div.content div {
  max-width: 600px;
  /* Hack for IE6 */
  width: auto !important; width: 600px;
}

pre.codeinput {
  background: #EEEEEE;
  padding: 10px;
}
@media print {
  pre.codeinput {word-wrap:break-word; width:100%;}
} 

span.keyword {color: #0000FF}
span.comment {color: #228B22}
span.string {color: #A020F0}
span.untermstring {color: #B20000}
span.syscmd {color: #B28C00}

pre.codeoutput {
  color: #666666;
  padding: 10px;
}

pre.error {
  color: red;
}

p.footer {
  text-align: right;
  font-size: xx-small;
  font-weight: lighter;
  font-style: italic;
  color: gray;
}

  </style></head><body><div class="content"><h2>Contents</h2><div><ul><li><a href="#1">olymppoly.m</a></li><li><a href="#2">Load the Olympic data and extract the mens 100m data</a></li><li><a href="#3">Linear model</a></li><li><a href="#4">Quadratic model</a></li><li><a href="#5">Quartic model</a></li><li><a href="#6">8th order model</a></li></ul></div><h2>olymppoly.m<a name="1"></a></h2><p>From A First Course in Machine Learning, Chapter 1. Simon Rogers, 31/10/11 [simon.rogers@glasgow.ac.uk]</p><pre class="codeinput">clear <span class="string">all</span>;close <span class="string">all</span>;
</pre><h2>Load the Olympic data and extract the mens 100m data<a name="2"></a></h2><pre class="codeinput">load <span class="string">../data/olympics.mat</span>

x = male100(:,1);
t = male100(:,2);

<span class="comment">% Rescale x for numerical reasons</span>
x = x - x(1);
x = x./4;

<span class="comment">% Plot the data</span>
figure(1);hold <span class="string">off</span>
plot(x,t,<span class="string">'bo'</span>,<span class="string">'markersize'</span>,10);
xlabel(<span class="string">'Olympic number (note, not year!)'</span>);
ylabel(<span class="string">'Winning time'</span>);
</pre><img vspace="5" hspace="5" src="olymppoly_01.png" alt=""> <h2>Linear model<a name="3"></a></h2><pre class="codeinput">plotx = [x(1)-2:0.01:x(end)+2]';
X = [];
plotX = [];
<span class="keyword">for</span> k = 0:1
    X = [X x.^k];
    plotX = [plotX plotx.^k];
<span class="keyword">end</span>

w = inv(X'*X)*X'*t;

<span class="comment">% Plot the model</span>
figure(1);hold <span class="string">off</span>
figure(1);hold <span class="string">off</span>
plot(x,t,<span class="string">'bo'</span>,<span class="string">'markersize'</span>,10);
xlabel(<span class="string">'Olympic number (note, not year!)'</span>);
ylabel(<span class="string">'Winning time'</span>);
hold <span class="string">on</span>
plot(plotx,plotX*w,<span class="string">'r'</span>,<span class="string">'linewidth'</span>,2)
</pre><img vspace="5" hspace="5" src="olymppoly_02.png" alt=""> <h2>Quadratic model<a name="4"></a></h2><pre class="codeinput">plotx = [x(1)-2:0.01:x(end)+2]';
X = [];
plotX = [];
<span class="keyword">for</span> k = 0:2
    X = [X x.^k];
    plotX = [plotX plotx.^k];
<span class="keyword">end</span>

w = inv(X'*X)*X'*t;

<span class="comment">% Plot the model</span>
figure(1);hold <span class="string">off</span>
figure(1);hold <span class="string">off</span>
plot(x,t,<span class="string">'bo'</span>,<span class="string">'markersize'</span>,10);
xlabel(<span class="string">'Olympic number (note, not year!)'</span>);
ylabel(<span class="string">'Winning time'</span>);
hold <span class="string">on</span>
plot(plotx,plotX*w,<span class="string">'r'</span>,<span class="string">'linewidth'</span>,2)
</pre><img vspace="5" hspace="5" src="olymppoly_03.png" alt=""> <h2>Quartic model<a name="5"></a></h2><pre class="codeinput">plotx = [x(1)-2:0.01:x(end)+2]';
X = [];
plotX = [];
<span class="keyword">for</span> k = 0:4
    X = [X x.^k];
    plotX = [plotX plotx.^k];
<span class="keyword">end</span>

w = inv(X'*X)*X'*t;

<span class="comment">% Plot the model</span>
figure(1);hold <span class="string">off</span>
figure(1);hold <span class="string">off</span>
plot(x,t,<span class="string">'bo'</span>,<span class="string">'markersize'</span>,10);
xlabel(<span class="string">'Olympic number (note, not year!)'</span>);
ylabel(<span class="string">'Winning time'</span>);
hold <span class="string">on</span>
plot(plotx,plotX*w,<span class="string">'r'</span>,<span class="string">'linewidth'</span>,2)
</pre><img vspace="5" hspace="5" src="olymppoly_04.png" alt=""> <h2>8th order model<a name="6"></a></h2><pre class="codeinput">plotx = [x(1)-2:0.01:x(end)+2]';
X = [];
plotX = [];
<span class="keyword">for</span> k = 0:8
    X = [X x.^k];
    plotX = [plotX plotx.^k];
<span class="keyword">end</span>

w = inv(X'*X)*X'*t;

<span class="comment">% Plot the model</span>
figure(1);hold <span class="string">off</span>
figure(1);hold <span class="string">off</span>
plot(x,t,<span class="string">'bo'</span>,<span class="string">'markersize'</span>,10);
xlabel(<span class="string">'Olympic number (note, not year!)'</span>);
ylabel(<span class="string">'Winning time'</span>);
hold <span class="string">on</span>
plot(plotx,plotX*w,<span class="string">'r'</span>,<span class="string">'linewidth'</span>,2)
</pre><pre class="codeoutput">Warning: Matrix is close to singular or badly scaled.
         Results may be inaccurate. RCOND = 4.085559e-25. 
</pre><img vspace="5" hspace="5" src="olymppoly_05.png" alt=""> <p class="footer"><br>
      Published with MATLAB&reg; 7.12<br></p></div><!--
##### SOURCE BEGIN #####
%% olymppoly.m
% From A First Course in Machine Learning, Chapter 1.
% Simon Rogers, 31/10/11 [simon.rogers@glasgow.ac.uk]
clear all;close all;

%% Load the Olympic data and extract the mens 100m data
load ../data/olympics.mat

x = male100(:,1);
t = male100(:,2);

% Rescale x for numerical reasons
x = x - x(1);
x = x./4;

% Plot the data
figure(1);hold off
plot(x,t,'bo','markersize',10);
xlabel('Olympic number (note, not year!)');
ylabel('Winning time');

%% Linear model
plotx = [x(1)-2:0.01:x(end)+2]';
X = [];
plotX = [];
for k = 0:1
    X = [X x.^k];
    plotX = [plotX plotx.^k];
end

w = inv(X'*X)*X'*t;

% Plot the model
figure(1);hold off
figure(1);hold off
plot(x,t,'bo','markersize',10);
xlabel('Olympic number (note, not year!)');
ylabel('Winning time');
hold on
plot(plotx,plotX*w,'r','linewidth',2)


%% Quadratic model
plotx = [x(1)-2:0.01:x(end)+2]';
X = [];
plotX = [];
for k = 0:2
    X = [X x.^k];
    plotX = [plotX plotx.^k];
end

w = inv(X'*X)*X'*t;

% Plot the model
figure(1);hold off
figure(1);hold off
plot(x,t,'bo','markersize',10);
xlabel('Olympic number (note, not year!)');
ylabel('Winning time');
hold on
plot(plotx,plotX*w,'r','linewidth',2)

%% Quartic model
plotx = [x(1)-2:0.01:x(end)+2]';
X = [];
plotX = [];
for k = 0:4
    X = [X x.^k];
    plotX = [plotX plotx.^k];
end

w = inv(X'*X)*X'*t;

% Plot the model
figure(1);hold off
figure(1);hold off
plot(x,t,'bo','markersize',10);
xlabel('Olympic number (note, not year!)');
ylabel('Winning time');
hold on
plot(plotx,plotX*w,'r','linewidth',2)

%% 8th order model
plotx = [x(1)-2:0.01:x(end)+2]';
X = [];
plotX = [];
for k = 0:8
    X = [X x.^k];
    plotX = [plotX plotx.^k];
end

w = inv(X'*X)*X'*t;

% Plot the model
figure(1);hold off
figure(1);hold off
plot(x,t,'bo','markersize',10);
xlabel('Olympic number (note, not year!)');
ylabel('Winning time');
hold on
plot(plotx,plotX*w,'r','linewidth',2)



##### SOURCE END #####
--></body></html>